{"version":3,"sources":["file:///Users/ADMIN/Desktop/BubbleShooterCandy_Github/BubbleShooterCandy_Cocos/assets/Scripts/Loading/Controller.ts"],"names":["_decorator","Component","director","ccclass","property","Controller","gameClient","start","loadScene","update","deltaTime"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,Q,OAAAA,Q;;;;;kFAD5C;;;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAGjBK,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCJ,SADhC,CAC0C;AAAA;AAAA;AAAA,eAC/BK,UAD+B;AAAA;;AAGpB,cAALC,KAAK,GAAmB;AACjC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,UAAAA,QAAQ,CAACM,SAAT,CAAmB,MAAnB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AApCqC,O","sourcesContent":["// import GameClient from '@onechaintech/gamesdk-dev';\nimport { _decorator, Component, Node, find, director } from 'cc';\nimport { DataGame } from '../DataUser/DataGame';\nimport { StoredAPI } from '../StoredAPI';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Controller')\nexport class Controller extends Component {\n    public gameClient: any;\n\n    public async start() : Promise<void> {\n        // let _this = this;\n        // let parameters = find(\"GameClient\");\n        \n        // if (parameters === null) {\n        //     let parameters = new Node(\"GameClient\");\n        //     if (this.gameClient === undefined) {\n        //         this.gameClient = new GameClient(\"652f447ac99e7f524a3b60fc\", \"40cbeb4f-3bb5-4429-8a1b-a998db59a894\", window.parent, {dev: true});\n        //         await this.gameClient.initAsync()\n        //         .then(async (data) => {\n        //             //Get current user id\n        //             let userID = this.gameClient.user.citizen.getCitizenId();\n\n        //             //Get gamedata from server\n        //             await this.gameClient.user.data.getGameData().then((response: any) => {\n        //                 //Save data\n        //                 if (response.data[`${userID}`] !== undefined) DataGame.dataUser = response.data[`${userID}`];\n        //             }).catch(async (e) => {\n        //                 console.log('Error at get game data: ', e);\n        //             })\n\n        //             let gameClientParams = parameters.addComponent(StoredAPI);\n        //             gameClientParams.gameClient = this.gameClient;\n        //             director.addPersistRootNode(parameters);\n        //         })\n        //         .catch((err) => console.log(err));\n        //     }\n        // }\n        director.loadScene(\"Menu\");\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}